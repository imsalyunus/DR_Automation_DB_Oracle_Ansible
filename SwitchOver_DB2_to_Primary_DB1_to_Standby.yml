---
- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg01.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Query
        echo "SELECT database_role, switchover_status FROM v\$database;" | sqlplus -s / as sysdba
      register: db_p_to_s_01
      ignore_errors: yes

    - name: Display the database status
      debug:
        msg: "Database Status:\n{{ db_p_to_s_01.stdout }}"

    - name: Check if output contains 'TO STANDBY'
      set_fact:
        to_standby_required: "{{ 'TO STANDBY' in db_p_to_s_01.stdout }}"

    - name: Alter database to switchover to standby
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run ALTER DATABASE command
        echo "ALTER DATABASE COMMIT TO SWITCHOVER TO STANDBY;" | sqlplus -s / as sysdba
      when: to_standby_required
      register: alter_db_p_to_s_01

    - name: Display the result of ALTER DATABASE command
      debug:
        msg: "ALTER DATABASE command result:\n{{ alter_db_p_to_s_01.stdout }}"
      when: to_standby_required

    - name: Fail the playbook if 'TO STANDBY' is not found
      fail:
        msg: "The output does not contain 'TO STANDBY'. Stopping the workflow."
      when: not to_standby_required

- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg01.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Start the database in mount mode
        echo "startup mount;" | sqlplus -s / as sysdba
      register: db_mount
      ignore_errors: yes

    - name: Check if the database is mounted
      debug:
        msg: "Database Status:\n{{ db_mount.stdout }}"
      when: "'Database mounted.' in db_mount.stdout"

    - name: Fail if database is not mounted
      fail:
        msg: "Failed to mount the database. Output was:\n{{ db_mount.stdout }}"
      when: "'Database mounted.' not in db_mount.stdout"

- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg02.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Query
        echo "SELECT database_role, switchover_status FROM v\$database;" | sqlplus -s / as sysdba
      register: db_s_to_p_02
      ignore_errors: yes

    - name: Display the database status
      debug:
        msg: "Database Status:\n{{ db_s_to_p_02.stdout }}"

    - name: Check if switchover_status contains 'TO PRIMARY'
      set_fact:
        need_switchover: "{{ 'TO PRIMARY' in db_s_to_p_02.stdout }}"

    - name: Perform switchover to primary if needed
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Execute Switchover Command
        echo "ALTER DATABASE COMMIT TO SWITCHOVER TO PRIMARY;" | sqlplus -s / as sysdba
      when: need_switchover
      register: switchover_result

    - name: Display switchover result
      debug:
        msg: "Switchover Result:\n{{ switchover_result.stdout }}"
      when: need_switchover

    - name: Fail if switchover is needed but not performed
      fail:
        msg: "Switchover to primary was required but not performed."
      when: not need_switchover and 'TO PRIMARY' in db_s_to_p_02.stdout

- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg02.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Command
        echo "ALTER DATABASE OPEN;" | sqlplus -s / as sysdba
      register: db_open
      ignore_errors: yes

    - name: Check for success in database status
      fail:
        msg: "Database could not be opened. Output: {{ db_open.stdout }}"
      when: "'Database altered' not in db_open.stdout"

    - name: Display success message
      debug:
        msg: "Database successfully opened.\n{{ db_open.stdout }}"
      when: "'Database altered' in db_open.stdout"

- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg02.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Command
        echo "ALTER SYSTEM SET log_archive_dest_state_2=ENABLE SCOPE=BOTH;" | sqlplus -s / as sysdba
      register: db_en
      ignore_errors: yes

    - name: Check if the command was successful
      debug:
        msg: "Success: System altered."
      when: "'System altered' in db_en.stdout"

    - name: Fail if the command was not successful
      fail:
        msg: "The command to alter the system failed. Check the output for errors."
      when: "'System altered' not in db_en.stdout"

- name: Query Oracle Database Role and Switchover Status 01
  hosts: ora19cdg01.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables new
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Command
        echo "ALTER SYSTEM SET log_archive_dest_state_2=DEFER SCOPE=BOTH;" | sqlplus -s / as sysdba
      register: db_dis_new
      ignore_errors: yes

    - name: Check if the ALTER SYSTEM command was successful new
      debug:
        msg: "Success: System altered as expected."
      when: "'System altered' in db_dis_new.stdout"
      changed_when: false

    - name: Fail if the ALTER SYSTEM command was not successful
      fail:
        msg: "The ALTER SYSTEM command did not succeed. The expected output was not found."
      when: "'System altered' not in db_dis_new.stdout"

- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg01.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Query
        echo "ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT FROM SESSION;" | sqlplus -s / as sysdba
      register: db_restart
      ignore_errors: yes

    - name: Display the database status
      debug:
        msg: "Database Status:\n{{ db_restart.stdout }}"

    - name: Check if the output contains 'Database altered.'
      fail:
        msg: "The output does not contain 'Database altered.'"
      when: "'Database altered.' not in db_restart.stdout"

    - name: Output success message if the content is correct
      debug:
        msg: "Success: The database was successfully altered."
      when: "'Database altered.' in db_restart.stdout"
