---
- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg02.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Query
        echo "SELECT inst_id, name, value FROM gv\$dataguard_stats WHERE name='apply lag';" | sqlplus -s / as sysdba
      register: db_status_lag02
      #ignore_errors: yes

    - name: Check if SQL query returned "no rows selected"
      fail:
        msg: "SQL query did not return 'no rows selected'. Process halted."
      when: "'no rows selected' not in db_status_lag02.stdout"

    - name: Output SQL query results
      debug:
        msg: "{{ db_status_lag02.stdout }}"
      when: "'no rows selected' in db_status_lag02.stdout"

- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg01.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Query
        echo "SELECT inst_id, name, value FROM gv\$dataguard_stats WHERE name='apply lag';" | sqlplus -s / as sysdba
      register: db_status_lag01
      #ignore_errors: yes

    - name: Check if the query result contains the expected lag
      assert:
        that:
          - "'1 apply lag' in db_status_lag01.stdout"
          - "'+00 00:00:00' in db_status_lag01.stdout"
        fail_msg: "The query result does not contain the expected apply lag. Stopping playbook."
        success_msg: "Query result contains the expected apply lag. Proceeding with playbook."

    - name: Continue with the rest of the playbook
      debug:
        msg: "Query result verified. Proceeding with further tasks."
      when: "'1 apply lag' in db_status_lag01.stdout and '+00 00:00:00' in db_status_lag01.stdout"

- name: Run Oracle Commands
  hosts: ora19cdg02.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Commands
        for i in {1..3}; do
          echo "ALTER SYSTEM ARCHIVE LOG CURRENT;" | sqlplus -s / as sysdba
        done

        # Run ARCHIVE LOG LIST
        echo "ARCHIVE LOG LIST;" | sqlplus -s / as sysdba
      register: db_switchlog
      #ignore_errors: yes

    - name: Display SQL command result
      debug:
        msg: "{{ db_switchlog.stdout_lines }}"

- name: Query Oracle Database Role and Switchover Status
  hosts:
    - ora19cdg01.bwok.org
    - ora19cdg02.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Query
        sqlplus -s / as sysdba <<EOF
        SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF
        SELECT (ARCH.SEQUENCE# - APPL.SEQUENCE#) AS Difference
        FROM (
            SELECT THREAD#, SEQUENCE#
            FROM V\$ARCHIVED_LOG
            WHERE (THREAD#, FIRST_TIME) IN (
                SELECT THREAD#, MAX(FIRST_TIME)
                FROM V\$ARCHIVED_LOG
                GROUP BY THREAD#
            )
        ) ARCH,
        (
            SELECT THREAD#, SEQUENCE#
            FROM V\$LOG_HISTORY
            WHERE (THREAD#, FIRST_TIME) IN (
                SELECT THREAD#, MAX(FIRST_TIME)
                FROM V\$LOG_HISTORY
                GROUP BY THREAD#
            )
        ) APPL
        WHERE ARCH.THREAD# = APPL.THREAD#;
        EOF
      register: db_gap
      #ignore_errors: yes

    - name: Display SQL Query Result
      debug:
        var: db_gap.stdout_lines

    - name: Filter for zero results
      set_fact:
        db_zero_results: "{{ db_gap.stdout_lines | select('equalto', '0') | list }}"

    - name: Ensure results from both hosts have the same number of zero results
      assert:
        that:
          - hostvars['ora19cdg01.bwok.org'].db_zero_results | length == hostvars['ora19cdg02.bwok.org'].db_zero_results | length
          - hostvars['ora19cdg01.bwok.org'].db_zero_results == hostvars['ora19cdg02.bwok.org'].db_zero_results
        success_msg: "Results are the same, success!"
        fail_msg: "Results are different, failure!"

- name: Query Oracle Database Role and Switchover Status
  hosts:
    - ora19cdg01.bwok.org
    - ora19cdg02.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Query
        echo "SELECT log_mode, force_logging FROM v\$database;" | sqlplus -s / as sysdba
      register: db_force
      #ignore_errors: yes

    - name: Display the SQL query output
      debug:
        var: db_force.stdout

    - name: Check the SQL query result
      debug:
        msg: "SQL query executed successfully on {{ inventory_hostname }}."
      when: "'ARCHIVELOG' in db_force.stdout and 'YES' in db_force.stdout"

    - name: Fail the playbook if the query status is not as expected
      fail:
        msg: "SQL query execution failed or status is not as expected on {{ inventory_hostname }}. Halting playbook."
      when: "'ARCHIVELOG' not in db_force.stdout or 'YES' not in db_force.stdout"

- name: Query Oracle Database Role and Switchover Status
  hosts: ora19cdg01.bwok.org
  tasks:
    - name: Source the bash profile and set environment variables
      shell: |
        # Set Environment Variables
        export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1
        export ORACLE_SID=orcl
        export PATH=$PATH:$ORACLE_HOME/bin

        # Run SQL Query
        echo "SELECT process, status, sequence# FROM v\$managed_standby;" | sqlplus -s / as sysdba
      register: db_mrp
      #ignore_errors: yes

    - name: Display SQL Query Output
      debug:
        msg: "{{ db_mrp.stdout }}"

    - name: Check if MRP0 is present in the output
      debug:
        msg: "MRP0 process found, the operation is successful."
      when: "'MRP0' in db_mrp.stdout"

    - name: Fail if MRP0 is not found
      fail:
        msg: "MRP0 process not found. Stopping playbook execution."
      when: "'MRP0' not in db_mrp.stdout"
